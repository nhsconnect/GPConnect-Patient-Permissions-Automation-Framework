{
	"info": {
		"_postman_id": "2c6a32ea-ef60-4bfe-b665-fd223c3966e5",
		"name": "GP Connect - Patient Permissions",
		"description": "_Please read before running any tests_\n\n## Overview\n\n<img src=\"https://raw.githubusercontent.com/NHSDigital/gp-connect-user-permissions/master/specification/diagrams/overview.svg\">\n\nUse this API to list and manage the permissions a patient has to their  \nmedical record and a selection of services provided at their GP practice.\n\nYou can:\n\n- get a patient's permissions\n- request to update a patient's permissions to a higher level\n    \n\nYou cannot:\n\n- request to update a patient's permissions to a lower level\n    \n\nTo use this API, the end user must be a patient who is:\n\n- registered with the GP practice\n- registered with NHS login to P9 identity verification level\n    \n\nThis API allows you to manage the permissions for:\n\n- appointments\n- prescriptions\n- medical record\n    \n\nThis API is designed to respect the policy changes made in order to  \nallow patients to access their future medical record entries.  \nFor more details, see  \n[access to patient records through the NHS App](https://digital.nhs.uk/services/nhs-app/nhs-app-guidance-for-gp-practices/guidance-on-nhs-app-features/accelerating-patient-access-to-their-record).\n\n## Overview of the API automation framework\n\nThe purpose of this automation suite is to check that the data returned from the Patient Permissions API conforms to the specifications outlined in the documentation. The documentation can be found here:\n\n[https://digital.nhs.uk/developer/api-catalogue/gp-connect-patient-facing-user-permissions#overview--overview](https://digital.nhs.uk/developer/api-catalogue/gp-connect-patient-facing-user-permissions#overview--overview)\n\nThe tests are designed to test the entirety of this API without the need for manual testing. The only element they can not test is the date-time returned from the POST request as this will change for every request.\n\nPositive tests:\n\n- Can successfully increase a patient's permissions up to and including the max allowed for all 4 types of permissions (current medical record, historical medical record, appointments and prescriptions)\n- Can successfully retrieve current and max allowed permissions for all 4 types for a patient\n- Can retrieve all pending requests for increased permissions for a patient\n- The response body from all of the above requests is correct\n    \n\nError tests:\n\n- Invalid or unfindable patient ids return an error\n- Invalid request body returns an error\n- A duplicate request for the same type of permission returns an error for all 4 types. Eg: a second request to increase appointment permissions for a patient when the first one is still pending returns an error\n- A request to change permission to the same level as the patient's current permission returns an error, for all 4 types\n- A request to change permission to below the patient's current permission returns an error, for all 4 types\n    \n\n## Why Postman\n\nPostman was chosen as the API testing application in order to simplify running, maintaining and developing the framework for both technically and non-technically minded people as the user interface makes it more accessible.\n\n## Installation\n\n- Install Postman, go to: [https://www.postman.com/downloads/](https://)\n- Download this test collection to your local PC\n- Open the collection using postman\n    \n\n## Structure\n\nThis is a relatively simple api with a single endpoint with 2 request types, GET (retrieve current permission for all types, retrieve maximum allowed permissions for all 4 types and retrieve pending requests) and POST (request for a permission level change). You would find the tests for the endpoint at: Patient > Id > Positive tests / Error tests. The actual tests can be found by clicking on any test file and looking under the 'Tests' header:\n\n<img src=\"https://content.pstmn.io/0021f01c-5c30-4a93-82cf-b6be9be76a14/aW1hZ2UucG5n\" width=\"504\" height=\"261\">\n\nAll tests are written in javascript. Each test is titled using BDD syntax using the 'Given', 'When', 'Then' format, as well as a small description above the test.\n\nAll test files will contain mostly similar tests. They include checking the headers returned are correct, the status code returned is as expected, as well as the schema (the structure of the data) is correct and the actual values themselves are correct.\n\n## Setup (IMPORTANT)\n\n_**Before running any tests you must change the following:**_\n\n- Change the baseUrl variable. The baseUrl is currently pointing towards the NHS sandbox environment. To run this against your own testing environment, the base url will need to be changed. To do this:\n    - select the collection\n    - from the top panel, select the 'Variables' option\n    - change the 'baseUrl' 'current value' to the one for your environment\n- You will need to seed data for these tests to work. As you can see from the variables tab from changing the baseUrl, there are 7 patients that will need to be added to your database, and their id's added to the variables (use same steps as for the base url, but replace the 'current value' from \"pleaseReplaceWith...etc\" to the patient ID in your database). The following data should be added for each patient:\n    \n    - **Patient 1, 2, 3, 4, 5, 6: SHOULD NOT HAVE ANY CURRENT PENDING REQUESTS. They should all have the following seeded data before running the tests:**\n        - medicalRecord\n            - current\n                - accessLevel: none\n                - accessLevelMax: full\n            - historical\n                - accessLevel: none\n                - accessLevelMax: full\n        - appointments\n            - accessLevel: none\n            - accessLevelMax: manage\n        - prescriptions\n            - accessLevel: none\n            - accessLevelMax: manage\n    - **Patient 7: SHOULD ALSO NOT HAVE ANY CURRENT PENDING REQUESTS: They should have the following:**\n        \n        - medicalRecord\n            - current\n                - accessLevel: summary\n                - accessLevelMax: detailed\n            - historical\n                - accessLevel: summary\n                - accessLevelMax: detailed\n        - appointments\n            - accessLevel: view\n            - accessLevelMax: view\n        - prescriptions\n            \n            - accessLevel: view\n                \n    - **Patient 8: SHOULD BE INACTIVE**\n        \n    - **Patient 9: SHOULD BE DECEASED**\n        \n- Authentication token may need to be added to the header for the requests. This framework is not designed to test authentication, rather the shape of the returned data, and therefore does not implement authentication as it will be in production.\n    \n\n## After running tests (IMPORTANT)\n\nThis test framework is designed to assert the state of data based on the data setup above. Once you run the framework once, this will alter the original data and the tests would fail if run a second time. Therefore, **after every run of the tests, the DB should be returned back to the state described in the 'Setup' section above (the seeding section).**\n\n## Running one test\n\n- _Caution, whether you run just one test or the entire collection, you should always return the data back to how it is in the SETUP instructions after, otherwise subsequent tests may fail._\n- Select a test you'd like to run from the left hand pannel, eg: MedicationRequest > Id > Positive tests > Get a specific planned medication request\n- Press send\n- Results will be displayed below:\n    \n\n<img src=\"https://content.pstmn.io/803f532b-f0e6-437e-a1be-5ac3dd4b6345/aW1hZ2UucG5n\" width=\"506\" height=\"292\">\n\n## Running the collection\n\n- Right click the collection from the left hand panel\n- Select 'Run collection'\n- Either leave all tests selected or select specific ones you'd like to run\n- Select to run manually as a one off or schedule to run them frequently\n- Select the orange 'run' button:\n    \n\n<img src=\"https://content.pstmn.io/ee02ccd9-7489-4678-8a05-bbebeb1f3631/aW1hZ2UucG5n\" width=\"448\" height=\"422\">\n\n- The tests will now run. The passed tests, failed tests, skipped tests, time taken to run etc... will be displayed at the top:\n    \n\n<img src=\"https://content.pstmn.io/bcbc390f-3694-496e-b95d-7fe7f130fd32/aW1hZ2UucG5n\" width=\"564\" height=\"186\">\n\n## Capturing evidence\n\nTo capture test evidence of the collection run, the following needs to be done:\n\n- Right click the collection from the left hand panel\n- Select 'Run collection'\n- **Check 'Persist responses for a session'**\n- Select the orange 'run' button:\n    \n\n<img src=\"https://content.pstmn.io/dd7a086d-a346-4349-853b-a596fe2e775b/aW1hZ2UucG5n\" width=\"394\" height=\"432\">\n\n- Once the run has finished you should see 'Export results' in top right:\n    \n\n<img src=\"https://content.pstmn.io/30f06127-a645-4ddf-9cc9-6a8ff6da2d73/aW1hZ2UucG5n\" width=\"514\" height=\"111\">\n\n- Select this to download the results\n- As well as this, you will need to capture the requests sent for each request\n- Select each request in turn. Eg click on this request:\n    \n\n<img src=\"https://content.pstmn.io/ea9e567f-37e5-4ea5-a661-ceb57b6d57c3/aW1hZ2UucG5n\" width=\"476\" height=\"186\">\n\n- The following will appear with a response and request header:\n    \n\n<img src=\"https://content.pstmn.io/483c360e-917b-458e-9d73-489194763122/aW1hZ2UucG5n\" width=\"408\" height=\"483\">\n\n- Copy the content of both the response AND request into a text document, clearly labelled with the name of the request\n- Do this for each request sent\n- You will now have a file with the request and response for each request in text format as well as the downloaded file in json format as evidence\n    \n\n## Further help\n\nIf you'd like further help on using postman, visit the Postman learning centre: [https://learning.postman.com/docs/introduction/overview/](https://)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30594351"
	},
	"item": [
		{
			"name": "Patient",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Positive tests",
							"item": [
								{
									"name": "Request a change to patient 1's permission: medicalRecord - current - summary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"summary\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"current\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 2's permission: medicalRecord - current - detailed",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"detailed\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"current\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"detailed\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_2_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_2_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 3's permission: medicalRecord - current - documents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"documents\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"current\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_3_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_3_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 4's permission: medicalRecord - current - full",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"full\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"current\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"full\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_4_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_4_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 1's permission: medicalRecord - historical - summary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"summary\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"historical\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 2's permission: medicalRecord - historical - detailed",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"detailed\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"historical\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"detailed\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_2_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_2_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 3's permission: medicalRecord - historical - documents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"documents\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"historical\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_3_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_3_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to patient 4's permission: medicalRecord - historical - full",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"full\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"medicalRecord\"\r",
													"            },\r",
													"            \"medicalRecordType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"historical\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"            \"medicalRecordType\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"full\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_4_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_4_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to a patient 1's permission: appointments - view",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"view\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"appointments\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//medicalRecordType should not exist\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the property data.medicalRecordType does not exit\", () => {\r",
													"        pm.expect(jsonData.medicalRecordType).to.not.exist\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to a patient 2's permission: appointments - manage",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"manage\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"appointments\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//medicalRecordType should not exist\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the property data.medicalRecordType does not exit\", () => {\r",
													"        pm.expect(jsonData.medicalRecordType).to.not.exist\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_2_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_2_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to a patient 1's permission: prescriptions - view",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"view\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"prescriptions\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//medicalRecordType should not exist\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the property data.medicalRecordType does not exit\", () => {\r",
													"        pm.expect(jsonData.medicalRecordType).to.not.exist\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Request a change to a patient 2's permission: prescriptions - manage",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema and returned values\r",
													"pm.test(\"GIVEN I send a POST request to change my permissions, WHEN the response is returned, THEN the json corresponds to the required schema and values\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"status\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"pending\",  \r",
													"            },\r",
													"            \"createdDateTime\": {\r",
													"                \"type\": \"string\",\r",
													"                \"format\": \"date-time\"\r",
													"            },\r",
													"            \"message\": {\r",
													"                \"type\": \"string\",\r",
													"            },\r",
													"            \"accessLevel\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"manage\",\r",
													"            },\r",
													"            \"permissionType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"prescriptions\"\r",
													"            },\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"status\",\r",
													"            \"createdDateTime\",\r",
													"            \"message\",\r",
													"            \"accessLevel\",\r",
													"            \"permissionType\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//medicalRecordType should not exist\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the property data.medicalRecordType does not exit\", () => {\r",
													"        pm.expect(jsonData.medicalRecordType).to.not.exist\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_2_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_2_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Get a patient's permissions and requests - patient 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a GET request, WHEN the response is returned, THEN the json response corresponds to the required schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"medicalRecord\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"effectiveDate\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"format\": \"date\"\r",
													"                    },\r",
													"                    \"current\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                    \"historical\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"effectiveDate\",\r",
													"                    \"current\",\r",
													"                    \"historical\",\r",
													"                ]\r",
													"            },\r",
													"            \"appointments\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"prescriptions\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"requests\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"status\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"pending\",\r",
													"                                \"rejected\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"createdDateTime\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"format\": \"date-time\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                        },\r",
													"                        \"accessLevel\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"none\",\r",
													"                                \"summary\",\r",
													"                                \"detailed\",\r",
													"                                \"documents\",\r",
													"                                \"full\",\r",
													"                                \"view\",\r",
													"                                \"manage\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"permissionType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"medicalRecord\",\r",
													"                                \"appointments\",\r",
													"                                \"prescriptions\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"medicalRecordType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"current\",\r",
													"                                \"historical\"\r",
													"                            ]\r",
													"                        },\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"status\",\r",
													"                        \"createdDateTime\",\r",
													"                        \"message\",\r",
													"                        \"accessLevel\",\r",
													"                        \"permissionType\",\r",
													"                    ]\r",
													"                }\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"medicalRecord\",\r",
													"            \"appointments\",\r",
													"            \"prescriptions\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//current medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the current medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.current.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.current.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//historical medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.historical.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.historical.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//Appointments access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the appointments access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.appointments.accessLevel\r",
													"    accessLevelMax = jsonData.appointments.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//prescriptions access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the prescriptions access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.prescriptions.accessLevel\r",
													"    accessLevelMax = jsonData.prescriptions.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"var arrayOfRequests = jsonData.requests\r",
													"\r",
													"//If any request has permissionType = medicalRecord, then medicalRecordType should exist and access level should be of type medicalRecord\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN If request.permissionType = medicalRecord, then medicalRecordType should exist\", () => {\r",
													"    if (jsonData.hasOwnProperty(\"requests\")) {\r",
													"        arrayOfRequests.forEach((request) => {\r",
													"            if (request.permissionType === \"medicalRecord\") {\r",
													"                pm.expect(request.medicalRecordType).to.be.oneOf([\"current\", \"historical\"])\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"            }\r",
													"            else {\r",
													"                pm.expect(request.medicalRecordType).not.to.exist;\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"            }\r",
													"        })\r",
													"    }\r",
													"});\r",
													"\r",
													"//the pendng requests returned in the response body are as expected\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the correct requests are displayed for this patient\", () => {\r",
													"    var medicalRecordCurrentCount = 0;\r",
													"    var medicalRecordHistoricalCount = 0;\r",
													"    var appointmentsCount = 0;\r",
													"    var prescriptionsCount = 0;\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"summary\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"current\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordCurrentCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordCurrentCount).to.eql(1)\r",
													"\r",
													"    \r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"summary\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"historical\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordHistoricalCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordHistoricalCount).to.eql(1)\r",
													"\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"appointments\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"view\"\r",
													"            )\r",
													"            \r",
													"            ++appointmentsCount;\r",
													"    }\r",
													"    pm.expect(appointmentsCount).to.eql(1)\r",
													"\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"prescriptions\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"view\"\r",
													"            )\r",
													"            \r",
													"            ++prescriptionsCount;\r",
													"    }\r",
													"    pm.expect(prescriptionsCount).to.eql(1)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											},
											{
												"key": "prefer",
												"value": "example=GetResponseMultiplePendingRequests",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nGet a patient's permissions. The permissions describe the level of\naccess the patient has to their medical record, the appointments\nservice and the prescriptions service provided at their GP practice.\n\nThe medical record permission includes the access level the patient\nhas to both their current and their historical medical record.\nThe appointments and prescriptions service permissions represent the\npatient's current access level.\n\n## Use cases\n\nUse cases covered by this endpoint include:\n\n* building a UI so only the elements the patient has access to are\n  available\n* presenting permissions to the patient so they can see what they do\n  and do not have access to\n* presenting permissions to the patient so they can request additional\n  permissions\n\n## Maximum allowable permissions\n\nNot all patients are able to request the highest level of\npermission available. The maximum level each patient can request is\nincluded within the response. This can be used to prevent patients\nrequesting additional permissions that would not be granted.\n\n## Pending requests\n\nIt is possible for a patient to request to change permissions and\nthose requests to not be actioned immediately. When this happens\nthere is a need to inform the patient of any pending requests. This\ncan be done using the `requests` property.\n"
									},
									"response": []
								},
								{
									"name": "Get a patient's permissions and requests - patient 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a GET request, WHEN the response is returned, THEN the json response corresponds to the required schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"medicalRecord\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"effectiveDate\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"format\": \"date\"\r",
													"                    },\r",
													"                    \"current\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                    \"historical\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"effectiveDate\",\r",
													"                    \"current\",\r",
													"                    \"historical\",\r",
													"                ]\r",
													"            },\r",
													"            \"appointments\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"prescriptions\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"requests\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"status\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"pending\",\r",
													"                                \"rejected\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"createdDateTime\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"format\": \"date-time\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                        },\r",
													"                        \"accessLevel\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"none\",\r",
													"                                \"summary\",\r",
													"                                \"detailed\",\r",
													"                                \"documents\",\r",
													"                                \"full\",\r",
													"                                \"view\",\r",
													"                                \"manage\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"permissionType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"medicalRecord\",\r",
													"                                \"appointments\",\r",
													"                                \"prescriptions\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"medicalRecordType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"current\",\r",
													"                                \"historical\"\r",
													"                            ]\r",
													"                        },\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"status\",\r",
													"                        \"createdDateTime\",\r",
													"                        \"message\",\r",
													"                        \"accessLevel\",\r",
													"                        \"permissionType\",\r",
													"                    ]\r",
													"                }\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"medicalRecord\",\r",
													"            \"appointments\",\r",
													"            \"prescriptions\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//current medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the current medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.current.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.current.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//historical medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.historical.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.historical.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//Appointments access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the appointments access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.appointments.accessLevel\r",
													"    accessLevelMax = jsonData.appointments.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//prescriptions access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the prescriptions access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.prescriptions.accessLevel\r",
													"    accessLevelMax = jsonData.prescriptions.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"var arrayOfRequests = jsonData.requests\r",
													"\r",
													"//If any request has permissionType = medicalRecord, then medicalRecordType should exist and access level should be of type medicalRecord\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN If request.permissionType = medicalRecord, then medicalRecordType should exist\", () => {\r",
													"    if (jsonData.hasOwnProperty(\"requests\")) {\r",
													"        arrayOfRequests.forEach((request) => {\r",
													"            if (request.permissionType === \"medicalRecord\") {\r",
													"                pm.expect(request.medicalRecordType).to.be.oneOf([\"current\", \"historical\"])\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"            }\r",
													"            else {\r",
													"                pm.expect(request.medicalRecordType).not.to.exist;\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"            }\r",
													"        })\r",
													"    }\r",
													"});\r",
													"\r",
													"//the pendng requests returned in the response body are as expected\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the correct requests are displayed for this patient\", () => {\r",
													"    var medicalRecordCurrentCount = 0;\r",
													"    var medicalRecordHistoricalCount = 0;\r",
													"    var appointmentsCount = 0;\r",
													"    var prescriptionsCount = 0;\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"detailed\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"current\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordCurrentCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordCurrentCount).to.eql(1)\r",
													"\r",
													"    \r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"detailed\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"historical\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordHistoricalCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordHistoricalCount).to.eql(1)\r",
													"\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"appointments\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"manage\"\r",
													"            )\r",
													"            \r",
													"            ++appointmentsCount;\r",
													"    }\r",
													"    pm.expect(appointmentsCount).to.eql(1)\r",
													"\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"prescriptions\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"manage\"\r",
													"            )\r",
													"            \r",
													"            ++prescriptionsCount;\r",
													"    }\r",
													"    pm.expect(prescriptionsCount).to.eql(1)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_2_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_2_id}}"
											]
										},
										"description": "## Overview\n\nGet a patient's permissions. The permissions describe the level of\naccess the patient has to their medical record, the appointments\nservice and the prescriptions service provided at their GP practice.\n\nThe medical record permission includes the access level the patient\nhas to both their current and their historical medical record.\nThe appointments and prescriptions service permissions represent the\npatient's current access level.\n\n## Use cases\n\nUse cases covered by this endpoint include:\n\n* building a UI so only the elements the patient has access to are\n  available\n* presenting permissions to the patient so they can see what they do\n  and do not have access to\n* presenting permissions to the patient so they can request additional\n  permissions\n\n## Maximum allowable permissions\n\nNot all patients are able to request the highest level of\npermission available. The maximum level each patient can request is\nincluded within the response. This can be used to prevent patients\nrequesting additional permissions that would not be granted.\n\n## Pending requests\n\nIt is possible for a patient to request to change permissions and\nthose requests to not be actioned immediately. When this happens\nthere is a need to inform the patient of any pending requests. This\ncan be done using the `requests` property.\n"
									},
									"response": []
								},
								{
									"name": "Get a patient's permissions and requests - patient 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a GET request, WHEN the response is returned, THEN the json response corresponds to the required schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"medicalRecord\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"effectiveDate\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"format\": \"date\"\r",
													"                    },\r",
													"                    \"current\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                    \"historical\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"effectiveDate\",\r",
													"                    \"current\",\r",
													"                    \"historical\",\r",
													"                ]\r",
													"            },\r",
													"            \"appointments\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"prescriptions\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"requests\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"status\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"pending\",\r",
													"                                \"rejected\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"createdDateTime\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"format\": \"date-time\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                        },\r",
													"                        \"accessLevel\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"none\",\r",
													"                                \"summary\",\r",
													"                                \"detailed\",\r",
													"                                \"documents\",\r",
													"                                \"full\",\r",
													"                                \"view\",\r",
													"                                \"manage\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"permissionType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"medicalRecord\",\r",
													"                                \"appointments\",\r",
													"                                \"prescriptions\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"medicalRecordType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"current\",\r",
													"                                \"historical\"\r",
													"                            ]\r",
													"                        },\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"status\",\r",
													"                        \"createdDateTime\",\r",
													"                        \"message\",\r",
													"                        \"accessLevel\",\r",
													"                        \"permissionType\",\r",
													"                    ]\r",
													"                }\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"medicalRecord\",\r",
													"            \"appointments\",\r",
													"            \"prescriptions\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//current medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the current medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.current.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.current.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//historical medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.historical.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.historical.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//Appointments access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the appointments access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.appointments.accessLevel\r",
													"    accessLevelMax = jsonData.appointments.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//prescriptions access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the prescriptions access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.prescriptions.accessLevel\r",
													"    accessLevelMax = jsonData.prescriptions.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"var arrayOfRequests = jsonData.requests\r",
													"\r",
													"//If any request has permissionType = medicalRecord, then medicalRecordType should exist and access level should be of type medicalRecord\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN If request.permissionType = medicalRecord, then medicalRecordType should exist\", () => {\r",
													"    if (jsonData.hasOwnProperty(\"requests\")) {\r",
													"        arrayOfRequests.forEach((request) => {\r",
													"            if (request.permissionType === \"medicalRecord\") {\r",
													"                pm.expect(request.medicalRecordType).to.be.oneOf([\"current\", \"historical\"])\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"            }\r",
													"            else {\r",
													"                pm.expect(request.medicalRecordType).not.to.exist;\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"            }\r",
													"        })\r",
													"    }\r",
													"});\r",
													"\r",
													"//the pendng requests returned in the response body are as expected\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the correct requests are displayed for this patient\", () => {\r",
													"    var medicalRecordCurrentCount = 0;\r",
													"    var medicalRecordHistoricalCount = 0;\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"documents\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"current\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordCurrentCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordCurrentCount).to.eql(1)\r",
													"\r",
													"    \r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"documents\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"historical\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordHistoricalCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordHistoricalCount).to.eql(1)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_3_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_3_id}}"
											]
										},
										"description": "## Overview\n\nGet a patient's permissions. The permissions describe the level of\naccess the patient has to their medical record, the appointments\nservice and the prescriptions service provided at their GP practice.\n\nThe medical record permission includes the access level the patient\nhas to both their current and their historical medical record.\nThe appointments and prescriptions service permissions represent the\npatient's current access level.\n\n## Use cases\n\nUse cases covered by this endpoint include:\n\n* building a UI so only the elements the patient has access to are\n  available\n* presenting permissions to the patient so they can see what they do\n  and do not have access to\n* presenting permissions to the patient so they can request additional\n  permissions\n\n## Maximum allowable permissions\n\nNot all patients are able to request the highest level of\npermission available. The maximum level each patient can request is\nincluded within the response. This can be used to prevent patients\nrequesting additional permissions that would not be granted.\n\n## Pending requests\n\nIt is possible for a patient to request to change permissions and\nthose requests to not be actioned immediately. When this happens\nthere is a need to inform the patient of any pending requests. This\ncan be done using the `requests` property.\n"
									},
									"response": []
								},
								{
									"name": "Get a patient's permissions and requests - patient 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a GET request, WHEN the response is returned, THEN the json response corresponds to the required schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"medicalRecord\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"effectiveDate\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"format\": \"date\"\r",
													"                    },\r",
													"                    \"current\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                    \"historical\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"effectiveDate\",\r",
													"                    \"current\",\r",
													"                    \"historical\",\r",
													"                ]\r",
													"            },\r",
													"            \"appointments\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"prescriptions\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"requests\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"status\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"pending\",\r",
													"                                \"rejected\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"createdDateTime\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"format\": \"date-time\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                        },\r",
													"                        \"accessLevel\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"none\",\r",
													"                                \"summary\",\r",
													"                                \"detailed\",\r",
													"                                \"documents\",\r",
													"                                \"full\",\r",
													"                                \"view\",\r",
													"                                \"manage\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"permissionType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"medicalRecord\",\r",
													"                                \"appointments\",\r",
													"                                \"prescriptions\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"medicalRecordType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"current\",\r",
													"                                \"historical\"\r",
													"                            ]\r",
													"                        },\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"status\",\r",
													"                        \"createdDateTime\",\r",
													"                        \"message\",\r",
													"                        \"accessLevel\",\r",
													"                        \"permissionType\",\r",
													"                    ]\r",
													"                }\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"medicalRecord\",\r",
													"            \"appointments\",\r",
													"            \"prescriptions\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//current medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the current medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.current.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.current.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//historical medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.historical.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.historical.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//Appointments access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the appointments access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.appointments.accessLevel\r",
													"    accessLevelMax = jsonData.appointments.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//prescriptions access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the prescriptions access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.prescriptions.accessLevel\r",
													"    accessLevelMax = jsonData.prescriptions.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"var arrayOfRequests = jsonData.requests\r",
													"\r",
													"//If any request has permissionType = medicalRecord, then medicalRecordType should exist and access level should be of type medicalRecord\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN If request.permissionType = medicalRecord, then medicalRecordType should exist\", () => {\r",
													"    if (jsonData.hasOwnProperty(\"requests\")) {\r",
													"        arrayOfRequests.forEach((request) => {\r",
													"            if (request.permissionType === \"medicalRecord\") {\r",
													"                pm.expect(request.medicalRecordType).to.be.oneOf([\"current\", \"historical\"])\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"            }\r",
													"            else {\r",
													"                pm.expect(request.medicalRecordType).not.to.exist;\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"            }\r",
													"        })\r",
													"    }\r",
													"});\r",
													"\r",
													"//the pendng requests returned in the response body are as expected\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the correct requests are displayed for this patient\", () => {\r",
													"    var medicalRecordCurrentCount = 0;\r",
													"    var medicalRecordHistoricalCount = 0;\r",
													"\r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"full\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"current\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordCurrentCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordCurrentCount).to.eql(1)\r",
													"\r",
													"    \r",
													"    for (var request in arrayOfRequests) {\r",
													"        if (\r",
													"            arrayOfRequests[request].permissionType == \"medicalRecord\" &&\r",
													"            arrayOfRequests[request].status == \"pending\" &&\r",
													"            arrayOfRequests[request].accessLevel == \"full\" &&\r",
													"            arrayOfRequests[request].medicalRecordType == \"historical\"\r",
													"            )\r",
													"            \r",
													"            ++medicalRecordHistoricalCount;\r",
													"    }\r",
													"    pm.expect(medicalRecordHistoricalCount).to.eql(1)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_4_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_4_id}}"
											]
										},
										"description": "## Overview\n\nGet a patient's permissions. The permissions describe the level of\naccess the patient has to their medical record, the appointments\nservice and the prescriptions service provided at their GP practice.\n\nThe medical record permission includes the access level the patient\nhas to both their current and their historical medical record.\nThe appointments and prescriptions service permissions represent the\npatient's current access level.\n\n## Use cases\n\nUse cases covered by this endpoint include:\n\n* building a UI so only the elements the patient has access to are\n  available\n* presenting permissions to the patient so they can see what they do\n  and do not have access to\n* presenting permissions to the patient so they can request additional\n  permissions\n\n## Maximum allowable permissions\n\nNot all patients are able to request the highest level of\npermission available. The maximum level each patient can request is\nincluded within the response. This can be used to prevent patients\nrequesting additional permissions that would not be granted.\n\n## Pending requests\n\nIt is possible for a patient to request to change permissions and\nthose requests to not be actioned immediately. When this happens\nthere is a need to inform the patient of any pending requests. This\ncan be done using the `requests` property.\n"
									},
									"response": []
								},
								{
									"name": "Get a patient's permissions and requests - patient 5 (no requests on patient profile)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I provide an existing valid patient ID, WHEN I send the request, THEN the status code response is 200\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", () => {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", () => {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/fhir+json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a GET request, WHEN the response is returned, THEN the json response corresponds to the required schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"medicalRecord\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"effectiveDate\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"format\": \"date\"\r",
													"                    },\r",
													"                    \"current\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                    \"historical\": {\r",
													"                        \"type\": \"object\",\r",
													"                        \"properties\": {\r",
													"                            \"accessLevel\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                            \"accessLevelMax\": {\r",
													"                                \"type\": \"string\",\r",
													"                                \"enum\": [\"none\", \"summary\", \"detailed\", \"documents\", \"full\"]\r",
													"                            },\r",
													"                        },\r",
													"                        \"required\": [\r",
													"                            \"accessLevel\",\r",
													"                            \"accessLevelMax\",\r",
													"                        ]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"effectiveDate\",\r",
													"                    \"current\",\r",
													"                    \"historical\",\r",
													"                ]\r",
													"            },\r",
													"            \"appointments\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"prescriptions\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"accessLevel\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                    \"accessLevelMax\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"enum\": [\"none\", \"view\", \"manage\"]\r",
													"                    },\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"accessLevel\",\r",
													"                    \"accessLevelMax\",\r",
													"                ]\r",
													"            },\r",
													"            \"requests\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"status\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"pending\",\r",
													"                                \"rejected\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"createdDateTime\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"format\": \"date-time\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                        },\r",
													"                        \"accessLevel\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"none\",\r",
													"                                \"summary\",\r",
													"                                \"detailed\",\r",
													"                                \"documents\",\r",
													"                                \"full\",\r",
													"                                \"view\",\r",
													"                                \"manage\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"permissionType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"medicalRecord\",\r",
													"                                \"appointments\",\r",
													"                                \"prescriptions\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"medicalRecordType\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"current\",\r",
													"                                \"historical\"\r",
													"                            ]\r",
													"                        },\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"status\",\r",
													"                        \"createdDateTime\",\r",
													"                        \"message\",\r",
													"                        \"accessLevel\",\r",
													"                        \"permissionType\",\r",
													"                    ]\r",
													"                }\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"medicalRecord\",\r",
													"            \"appointments\",\r",
													"            \"prescriptions\",\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"//current medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the current medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.current.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.current.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//historical medical record access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the medical record access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.medicalRecord.historical.accessLevel\r",
													"    accessLevelMax = jsonData.medicalRecord.historical.accessLevelMax\r",
													"    if (accessLevelMax === \"full\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"documents\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"detailed\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"detailed\", \"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"summary\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"summary\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//Appointments access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the appointments access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.appointments.accessLevel\r",
													"    accessLevelMax = jsonData.appointments.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"//prescriptions access level should be equal or lower than access level max\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN the prescriptions access level should be equal or lower than access level max\", () => {\r",
													"    accessLevel = jsonData.prescriptions.accessLevel\r",
													"    accessLevelMax = jsonData.prescriptions.accessLevelMax\r",
													"\r",
													"    if (accessLevelMax === \"manage\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"view\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"view\", \"none\"])\r",
													"    }\r",
													"    else if (accessLevelMax === \"none\") {\r",
													"        pm.expect(accessLevel).to.be.oneOf([\"none\"])\r",
													"    }\r",
													"});\r",
													"\r",
													"var arrayOfRequests = jsonData.requests\r",
													"\r",
													"//If any request has permissionType = medicalRecord, then medicalRecordType should exist and access level should be of type medicalRecord\r",
													"pm.test(\"GIVEN I send a get request, WHEN the response is returned, THEN If request.permissionType = medicalRecord, then medicalRecordType should exist\", () => {\r",
													"    if (jsonData.hasOwnProperty(\"requests\")) {\r",
													"        arrayOfRequests.forEach((request) => {\r",
													"            if (request.permissionType === \"medicalRecord\") {\r",
													"                pm.expect(request.medicalRecordType).to.be.oneOf([\"current\", \"historical\"])\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"full\", \"documents\", \"detailed\", \"summary\", \"none\"])\r",
													"            }\r",
													"            else {\r",
													"                pm.expect(request.medicalRecordType).not.to.exist\r",
													"                pm.expect(request.accessLevel).to.be.oneOf([\"manage\", \"view\", \"none\"])\r",
													"            }\r",
													"        })\r",
													"    }\r",
													"});\r",
													"\r",
													"//assert no pending requests\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the correct requests are displayed for this patient\", () => {\r",
													"    pm.expect(jsonData.requests).not.to.exist\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_5_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_5_id}}"
											]
										},
										"description": "## Overview\n\nGet a patient's permissions. The permissions describe the level of\naccess the patient has to their medical record, the appointments\nservice and the prescriptions service provided at their GP practice.\n\nThe medical record permission includes the access level the patient\nhas to both their current and their historical medical record.\nThe appointments and prescriptions service permissions represent the\npatient's current access level.\n\n## Use cases\n\nUse cases covered by this endpoint include:\n\n* building a UI so only the elements the patient has access to are\n  available\n* presenting permissions to the patient so they can see what they do\n  and do not have access to\n* presenting permissions to the patient so they can request additional\n  permissions\n\n## Maximum allowable permissions\n\nNot all patients are able to request the highest level of\npermission available. The maximum level each patient can request is\nincluded within the response. This can be used to prevent patients\nrequesting additional permissions that would not be granted.\n\n## Pending requests\n\nIt is possible for a patient to request to change permissions and\nthose requests to not be actioned immediately. When this happens\nthere is a need to inform the patient of any pending requests. This\ncan be done using the `requests` property.\n"
									},
									"response": []
								}
							]
						},
						{
							"name": "Error tests",
							"item": [
								{
									"name": "Error: Patient id does not match any on record - 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"PATIENT_NOT_FOUND\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "An optional ID which you can use to track transactions across multiple systems. It can have any value, but we recommend avoiding `.` characters.\nMirrored back in a response header.\n",
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}"
											},
											{
												"description": "(Required) A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\nMust be a universally unique identifier (UUID) (ideally version 4).\n\nMirrored back in a response header.\n\nIf you re-send a failed request, use the same value in this header.\n\nRequired in all environments except sandbox.\n",
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/0123456789",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"0123456789"
											]
										},
										"description": "Use this endpoint to get specific MedicationRequests.\n\nThe request must include the following parameter:\n\n* id\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id does not match any on record inactive- 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"PATIENT_NOT_FOUND\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "An optional ID which you can use to track transactions across multiple systems. It can have any value, but we recommend avoiding `.` characters.\nMirrored back in a response header.\n",
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}"
											},
											{
												"description": "(Required) A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\nMust be a universally unique identifier (UUID) (ideally version 4).\n\nMirrored back in a response header.\n\nIf you re-send a failed request, use the same value in this header.\n\nRequired in all environments except sandbox.\n",
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_8_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_8_id}}"
											]
										},
										"description": "Use this endpoint to get specific MedicationRequests.\n\nThe request must include the following parameter:\n\n* id\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id letters - 400 INVALID_NHS_NUMBER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"INVALID_NHS_NUMBER\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "An optional ID which you can use to track transactions across multiple systems. It can have any value, but we recommend avoiding `.` characters.\nMirrored back in a response header.\n",
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}"
											},
											{
												"description": "(Required) A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\nMust be a universally unique identifier (UUID) (ideally version 4).\n\nMirrored back in a response header.\n\nIf you re-send a failed request, use the same value in this header.\n\nRequired in all environments except sandbox.\n",
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/thisIsNotAValidId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"thisIsNotAValidId"
											]
										},
										"description": "Use this endpoint to get specific MedicationRequests.\n\nThe request must include the following parameter:\n\n* id\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id wrong format - 400 INVALID_NHS_NUMBER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"INVALID_NHS_NUMBER\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "An optional ID which you can use to track transactions across multiple systems. It can have any value, but we recommend avoiding `.` characters.\nMirrored back in a response header.\n",
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}"
											},
											{
												"description": "(Required) A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\nMust be a universally unique identifier (UUID) (ideally version 4).\n\nMirrored back in a response header.\n\nIf you re-send a failed request, use the same value in this header.\n\nRequired in all environments except sandbox.\n",
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/0123-456-789",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"0123-456-789"
											]
										},
										"description": "Use this endpoint to get specific MedicationRequests.\n\nThe request must include the following parameter:\n\n* id\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id too short - 400 INVALID_NHS_NUMBER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"INVALID_NHS_NUMBER\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "An optional ID which you can use to track transactions across multiple systems. It can have any value, but we recommend avoiding `.` characters.\nMirrored back in a response header.\n",
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}"
											},
											{
												"description": "(Required) A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\nMust be a universally unique identifier (UUID) (ideally version 4).\n\nMirrored back in a response header.\n\nIf you re-send a failed request, use the same value in this header.\n\nRequired in all environments except sandbox.\n",
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/Patient/012345",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"012345"
											]
										},
										"description": "Use this endpoint to get specific MedicationRequests.\n\nThe request must include the following parameter:\n\n* id\n"
									},
									"response": []
								},
								{
									"name": "Error: Request to set a permission for an unknown permission type - 400 - UNSUPPORTED_VALUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"unsupported value\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id does not match any on record - 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/0123456789",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"0123456789"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id does not match any on record  inactive - 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_8_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_8_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id does not match any on record  deceased- 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_9_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_9_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Patient id does not match any on recorda non-Regular/GMS patient (i.e. the patient's registered practice is somewhere else) - 404 PATIENT_NOT_FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/1234567082",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"1234567082"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request to set a permission for an unknown medical record type - 400 - UNSUPPORTED_VALUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"unsupported value\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request to set a permission for an unknown accessLevel - 400 - UNSUPPORTED_VALUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"UNSUPPORTED_VALUE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"unsupported value\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request sent with additional properties - 400 - ADDITIONAL_PROPERTIES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"ADDITIONAL_PROPERTIES\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\",\r\n  \"someOtherProperty\": \"someValue\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request sent with medicalRecordType property when permissionType is appointments - 400 - ADDITIONAL_PROPERTIES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"ADDITIONAL_PROPERTIES\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request sent with medicalRecordType property when permissionType is prescriptions - 400 - ADDITIONAL_PROPERTIES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"ADDITIONAL_PROPERTIES\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request sent without medicalRecordType - 400 - INVALID_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"INVALID_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            },\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_6_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_6_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Duplicate request - current - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Duplicate request - historical - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Duplicate request - appointments - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Duplicate request - prescriptions - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                }\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_1_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_1_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is over max allowed - current - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being above the maximum practice set level for current medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is over max allowed - historical - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being above the maximum practice set level for historical medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"documents\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is over max allowed - appointments - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being above the maximum practice set level for appointments\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is over max allowed - prescriptions - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being above the maximum practice set level for prescriptions\"\r",
													"                                },\r",
													"                                \"required\": [\"text\"]\r",
													"                            }\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"manage\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is same as current - current - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being the same as the user's current level for current medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is same as current - historical - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being the same as the user's current level for historical medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"summary\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is same as current - appointments - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being the same as the user's current level for appointments\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is same as current - prescriptions - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being the same as the user's current level for current medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"view\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is below current - current - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being below the user's current level for current medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"current\",\r\n  \"accessLevel\": \"none\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is below current - historical - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\" : \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being below the user's current level for historical medicalRecord\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"medicalRecord\",\r\n  \"medicalRecordType\": \"historical\",\r\n  \"accessLevel\": \"none\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is below current - appointments - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being below the user's current level for appointments\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"appointments\",\r\n  \"accessLevel\": \"none\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								},
								{
									"name": "Error: Request for permission that is below current - prescriptions - 403 FORBIDDEN_UPDATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"//Verify the response status code\r",
													"pm.test(\"GIVEN I send an incorrect request, WHEN I send the request, THEN the status code response is 400\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"//Verify response header X-Correlation-ID\r",
													"pm.test(\"GIVEN I provide an X-Correlation-ID in the header, WHEN I send the request, THEN the same X-Correlation-ID is returned in the response header\", function () {\r",
													"    var XCorrelationID = pm.variables.get(\"X-Correlation-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Correlation-ID\")).to.eql(XCorrelationID);\r",
													"});\r",
													"\r",
													"//Verify response header X-Request-ID\r",
													"pm.test(\"GIVEN I provide an X-Request-ID in the header, WHEN I send the request, THEN the same X-Request-ID is returned in the response header\", function () {\r",
													"    var XRequestID = pm.variables.get(\"X-Request-ID\");\r",
													"    pm.expect(pm.response.headers.get(\"X-Request-ID\")).to.eql(XRequestID);\r",
													"});\r",
													"\r",
													"//Verify response header content-type\r",
													"pm.test(\"GIVEN I send a request, WHEN the response is returned, THEN the content-type in the header is set to 'application/json'\", () => {\r",
													"    pm.expect(pm.response.headers.get('CONTENT-TYPE')).to.eql('application/json')\r",
													"});\r",
													"\r",
													"//Verify response schema\r",
													"pm.test(\"GIVEN I send a MedicationRequest with an ID that doesn't exist, WHEN the response is returned, THEN the json error response corresponds to the required MedicationRequest schema\", () => {\r",
													"    var schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"resourceType\": {\r",
													"                \"type\": \"string\",\r",
													"                \"const\": \"OperationOutcome\"\r",
													"            },\r",
													"            \"id\": {\r",
													"                \"type\": \"string\"\r",
													"            },\r",
													"            \"meta\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                    \"profile\": {\r",
													"                        \"type\": \"array\",\r",
													"                        \"minItems\": 1,\r",
													"                        \"maxItems\": 1,\r",
													"                        \"items\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"const\": \"https://fhir.hl7.org.uk/StructureDefinition/UKCore-OperationOutcome\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\"profile\"]\r",
													"            },\r",
													"            \"issue\": {\r",
													"                \"type\": \"array\",\r",
													"                \"items\": {\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"severity\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"fatal\",\r",
													"                                \"error\",\r",
													"                                \"warning\",\r",
													"                                \"information\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"enum\": [\r",
													"                                \"invalid\",\r",
													"                                \"structure\",\r",
													"                                \"required\",\r",
													"                                \"value\",\r",
													"                                \"invariant\",\r",
													"                                \"security\",\r",
													"                                \"login\",\r",
													"                                \"unknown\",\r",
													"                                \"expired\",\r",
													"                                \"forbidden\",\r",
													"                                \"suppressed\",\r",
													"                                \"processing\",\r",
													"                                \"not-supported\",\r",
													"                                \"duplicate\",\r",
													"                                \"not-found\",\r",
													"                                \"too-long\",\r",
													"                                \"code-invalid\",\r",
													"                                \"extension\",\r",
													"                                \"too-costly\",\r",
													"                                \"business-rule\",\r",
													"                                \"conflict\",\r",
													"                                \"incomplete\",\r",
													"                                \"transient\",\r",
													"                                \"lock-error\",\r",
													"                                \"no-store\",\r",
													"                                \"exception\",\r",
													"                                \"timeout\",\r",
													"                                \"throttled\",\r",
													"                                \"informational\",\r",
													"                            ]\r",
													"                        },\r",
													"                        \"details\": {\r",
													"                            \"type\": \"object\",\r",
													"                            \"properties\": {\r",
													"                                \"coding\": {\r",
													"                                    \"type\": \"array\",\r",
													"                                    \"minItems\": 1,\r",
													"                                    \"items\": {\r",
													"                                        \"properties\": {\r",
													"                                            \"system\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            },\r",
													"                                            \"code\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                                \"const\": \"FORBIDDEN_UPDATE\",\r",
													"                                            },\r",
													"                                            \"display\": {\r",
													"                                                \"type\": \"string\",\r",
													"                                            }\r",
													"                                        },\r",
													"                                        \"required\": [\r",
													"                                            \"system\",\r",
													"                                            \"code\",\r",
													"                                            \"display\"\r",
													"                                        ]\r",
													"                                    }\r",
													"                                },\r",
													"                                \"text\": {\r",
													"                                    \"type\": \"string\",\r",
													"                                    \"const\": \"Request rejected due to requested access being below the user's current level for prescriptions\"\r",
													"                                }\r",
													"                            },\r",
													"                            \"required\": [\"text\"]\r",
													"                        },\r",
													"                        \"diagnostics\": {\r",
													"                            \"type\": \"string\"\r",
													"                        },\r",
													"                        \"expression\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    }\r",
													"                },\r",
													"                \"required\": [\r",
													"                    \"severity\",\r",
													"                    \"code\",\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"resourceType\",\r",
													"            \"meta\",\r",
													"            \"issue\"\r",
													"        ]\r",
													"    }\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "{{X-Request-ID}}",
												"type": "text"
											},
											{
												"key": "X-Correlation-ID",
												"value": "{{X-Correlation-ID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"permissionType\": \"prescriptions\",\r\n  \"accessLevel\": \"none\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/Patient/{{patient_7_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"Patient",
												"{{patient_7_id}}"
											]
										},
										"description": "## Overview\n\nRequest a change to the permission a patient has for their medical\nrecord or services provided by the GP practice.\n\nOnce you submit a request, it waits in a queue to be processed by a\nhealthcare worker. Exactly when this will happen is unpredictable.\n\nThe response to getting patient permissions contains information on\npending requests. Once the request is processed it is no longer\nincluded in pending requests.\n\nIf you like, you can share this information with the patient to help\nset their expectations.\n\n## Use cases\n\nUse cases covered by this endpoint include the patient requesting:\n\n* additional access to the appointments\n* additional access to the prescriptions\n* additional access to their current medical record\n* detailed coded record access to their historical medical record\n\n## Request workflow\n\nWhen a request is made, if it is accepted, it is added to the GP\nsystem's workflow and processed at some point in the future. Responses\nto these requests have a state of pending.\n\nRejected requests are not added to the GP system's\nworkflow. The message included in the response to a rejected request\nexplains the reason for the rejection. This should be displayed to\nthe patient.\n\n## Request handling\n\nIf a request is a duplicate, it is deduplicated by\nthe GP system, with the original request being preserved.\n\nIf multiple requests are made (and accepted) they are combined\nwithin the workflow and reviewed together by a healthcare worker.\n"
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://sandbox.api.service.nhs.uk/gp-connect-user-permissions/FHIR/R4"
		},
		{
			"key": "X-Correlation-ID",
			"value": "11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA",
			"type": "string"
		},
		{
			"key": "X-Request-ID",
			"value": "60E0B220-8136-4CA5-AE46-1D97EF59D068",
			"type": "string"
		},
		{
			"key": "patient_1_id",
			"value": "PleaseReplaceWithActualPatient_1_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_2_id",
			"value": "PleaseReplaceWithActualPatient_2_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_3_id",
			"value": "PleaseReplaceWithActualPatient_3_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_4_id",
			"value": "PleaseReplaceWithActualPatient_4_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_5_id",
			"value": "PleaseReplaceWithActualPatient_5_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_6_id",
			"value": "PleaseReplaceWithActualPatient_6_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_7_id",
			"value": "PleaseReplaceWithActualPatient_7_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_8_id",
			"value": "PleaseReplaceWithActualPatient_8_idinYourDb",
			"type": "string"
		},
		{
			"key": "patient_9_id",
			"value": "PleaseReplaceWithActualPatient_9_idinYourDb",
			"type": "string"
		}
	]
}